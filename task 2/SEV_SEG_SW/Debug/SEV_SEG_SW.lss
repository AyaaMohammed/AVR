
SEV_SEG_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000001cc  00000240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000468  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000757  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ec       	ldi	r30, 0xCC	; 204
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define PINC   *((volatile u8*)0x33)

#define DDRD   *((u8*)0x31)
#define PORTD  *((u8*)0x32)
#define PIND   *((volatile u8*)0x30)
int main(void){
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	62 97       	sbiw	r28, 0x12	; 18
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	u8 arr1[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  96:	ce 01       	movw	r24, r28
  98:	04 96       	adiw	r24, 0x04	; 4
  9a:	9f 87       	std	Y+15, r25	; 0x0f
  9c:	8e 87       	std	Y+14, r24	; 0x0e
  9e:	e0 e6       	ldi	r30, 0x60	; 96
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	f9 8b       	std	Y+17, r31	; 0x11
  a4:	e8 8b       	std	Y+16, r30	; 0x10
  a6:	fa e0       	ldi	r31, 0x0A	; 10
  a8:	fa 8b       	std	Y+18, r31	; 0x12
  aa:	e8 89       	ldd	r30, Y+16	; 0x10
  ac:	f9 89       	ldd	r31, Y+17	; 0x11
  ae:	00 80       	ld	r0, Z
  b0:	88 89       	ldd	r24, Y+16	; 0x10
  b2:	99 89       	ldd	r25, Y+17	; 0x11
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	99 8b       	std	Y+17, r25	; 0x11
  b8:	88 8b       	std	Y+16, r24	; 0x10
  ba:	ee 85       	ldd	r30, Y+14	; 0x0e
  bc:	ff 85       	ldd	r31, Y+15	; 0x0f
  be:	00 82       	st	Z, r0
  c0:	8e 85       	ldd	r24, Y+14	; 0x0e
  c2:	9f 85       	ldd	r25, Y+15	; 0x0f
  c4:	01 96       	adiw	r24, 0x01	; 1
  c6:	9f 87       	std	Y+15, r25	; 0x0f
  c8:	8e 87       	std	Y+14, r24	; 0x0e
  ca:	9a 89       	ldd	r25, Y+18	; 0x12
  cc:	91 50       	subi	r25, 0x01	; 1
  ce:	9a 8b       	std	Y+18, r25	; 0x12
  d0:	ea 89       	ldd	r30, Y+18	; 0x12
  d2:	ee 23       	and	r30, r30
  d4:	51 f7       	brne	.-44     	; 0xaa <main+0x28>
	u8 swState1=0 ,swState2=0 , counter=0;
  d6:	1b 82       	std	Y+3, r1	; 0x03
  d8:	1a 82       	std	Y+2, r1	; 0x02
  da:	19 82       	std	Y+1, r1	; 0x01
	DDRA &=~(1<<0);
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	8e 7f       	andi	r24, 0xFE	; 254
  e8:	8c 93       	st	X, r24
	DDRA &=~(1<<1);
  ea:	aa e3       	ldi	r26, 0x3A	; 58
  ec:	b0 e0       	ldi	r27, 0x00	; 0
  ee:	ea e3       	ldi	r30, 0x3A	; 58
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8d 7f       	andi	r24, 0xFD	; 253
  f6:	8c 93       	st	X, r24
	PORTA |=(1<<0);
  f8:	ab e3       	ldi	r26, 0x3B	; 59
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	eb e3       	ldi	r30, 0x3B	; 59
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	81 60       	ori	r24, 0x01	; 1
 104:	8c 93       	st	X, r24
	PORTA |=(1<<1);
 106:	ab e3       	ldi	r26, 0x3B	; 59
 108:	b0 e0       	ldi	r27, 0x00	; 0
 10a:	eb e3       	ldi	r30, 0x3B	; 59
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	82 60       	ori	r24, 0x02	; 2
 112:	8c 93       	st	X, r24

	DDRC =0xff;
 114:	e4 e3       	ldi	r30, 0x34	; 52
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	80 83       	st	Z, r24
	PORTC =arr1[counter];
 11c:	a5 e3       	ldi	r26, 0x35	; 53
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	89 81       	ldd	r24, Y+1	; 0x01
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	ce 01       	movw	r24, r28
 128:	04 96       	adiw	r24, 0x04	; 4
 12a:	fc 01       	movw	r30, r24
 12c:	e2 0f       	add	r30, r18
 12e:	f3 1f       	adc	r31, r19
 130:	80 81       	ld	r24, Z
 132:	8c 93       	st	X, r24
	while(1){
		swState1 =((PINA>>0)&1);
 134:	e9 e3       	ldi	r30, 0x39	; 57
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	81 70       	andi	r24, 0x01	; 1
 13c:	8b 83       	std	Y+3, r24	; 0x03
		swState2 =((PINA>>1)&1);
 13e:	e9 e3       	ldi	r30, 0x39	; 57
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	86 95       	lsr	r24
 146:	81 70       	andi	r24, 0x01	; 1
 148:	8a 83       	std	Y+2, r24	; 0x02
		if(swState1==0){
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	88 23       	and	r24, r24
 14e:	e1 f4       	brne	.+56     	; 0x188 <main+0x106>
			if(counter <9){
 150:	89 81       	ldd	r24, Y+1	; 0x01
 152:	89 30       	cpi	r24, 0x09	; 9
 154:	78 f7       	brcc	.-34     	; 0x134 <main+0xb2>
				counter++;
 156:	89 81       	ldd	r24, Y+1	; 0x01
 158:	8f 5f       	subi	r24, 0xFF	; 255
 15a:	89 83       	std	Y+1, r24	; 0x01
				while(((PINA>>0)&1)==0);
 15c:	e9 e3       	ldi	r30, 0x39	; 57
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	88 2f       	mov	r24, r24
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	81 70       	andi	r24, 0x01	; 1
 168:	90 70       	andi	r25, 0x00	; 0
 16a:	00 97       	sbiw	r24, 0x00	; 0
 16c:	b9 f3       	breq	.-18     	; 0x15c <main+0xda>
				PORTC =arr1[counter];
 16e:	a5 e3       	ldi	r26, 0x35	; 53
 170:	b0 e0       	ldi	r27, 0x00	; 0
 172:	89 81       	ldd	r24, Y+1	; 0x01
 174:	28 2f       	mov	r18, r24
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	ce 01       	movw	r24, r28
 17a:	04 96       	adiw	r24, 0x04	; 4
 17c:	fc 01       	movw	r30, r24
 17e:	e2 0f       	add	r30, r18
 180:	f3 1f       	adc	r31, r19
 182:	80 81       	ld	r24, Z
 184:	8c 93       	st	X, r24
 186:	d6 cf       	rjmp	.-84     	; 0x134 <main+0xb2>
			}
		}
		else if(swState2==0){
 188:	8a 81       	ldd	r24, Y+2	; 0x02
 18a:	88 23       	and	r24, r24
 18c:	99 f6       	brne	.-90     	; 0x134 <main+0xb2>
			if(counter >0){
 18e:	89 81       	ldd	r24, Y+1	; 0x01
 190:	88 23       	and	r24, r24
 192:	81 f2       	breq	.-96     	; 0x134 <main+0xb2>
				counter--;
 194:	89 81       	ldd	r24, Y+1	; 0x01
 196:	81 50       	subi	r24, 0x01	; 1
 198:	89 83       	std	Y+1, r24	; 0x01
				while(((PINA>>1)&1)==0);
 19a:	e9 e3       	ldi	r30, 0x39	; 57
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	86 95       	lsr	r24
 1a2:	88 2f       	mov	r24, r24
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	81 70       	andi	r24, 0x01	; 1
 1a8:	90 70       	andi	r25, 0x00	; 0
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	b1 f3       	breq	.-20     	; 0x19a <main+0x118>
				PORTC =arr1[counter];
 1ae:	a5 e3       	ldi	r26, 0x35	; 53
 1b0:	b0 e0       	ldi	r27, 0x00	; 0
 1b2:	89 81       	ldd	r24, Y+1	; 0x01
 1b4:	28 2f       	mov	r18, r24
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	ce 01       	movw	r24, r28
 1ba:	04 96       	adiw	r24, 0x04	; 4
 1bc:	fc 01       	movw	r30, r24
 1be:	e2 0f       	add	r30, r18
 1c0:	f3 1f       	adc	r31, r19
 1c2:	80 81       	ld	r24, Z
 1c4:	8c 93       	st	X, r24
 1c6:	b6 cf       	rjmp	.-148    	; 0x134 <main+0xb2>

000001c8 <_exit>:
 1c8:	f8 94       	cli

000001ca <__stop_program>:
 1ca:	ff cf       	rjmp	.-2      	; 0x1ca <__stop_program>
